@model NorthCarolinaTaxRecoveryCalculator.Models.Reciept
<div id="fixedFormDiv">
    @using (Html.BeginForm("Create", "Reciept", FormMethod.Post, new { name = "reciept", id = "form" }))
    {
        @Html.ValidationSummary(true)

        @Html.HiddenFor(model => model.Project.ID);
    
        <fieldset>
            <legend>Reciept</legend>
            <div class="editor-label">
                @Html.LabelFor(model => model.RIF)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.RIF)
                @Html.ValidationMessageFor(model => model.RIF)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.DateOfSale)
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(model => model.DateOfSale)
                @Html.ValidationMessageFor(model => model.DateOfSale)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.StoreName)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.StoreName)
                @Html.ValidationMessageFor(model => model.StoreName)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.County)
            </div>
            <div class="editor-field">
                @Html.DropDownListFor(model => model.County, new SelectList(NorthCarolinaTaxRecoveryCalculator.Models.County.Counties, "ID", "Name"))
                @Html.ValidationMessageFor(model => model.County)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.SalesTax)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.SalesTax)
                @Html.ValidationMessageFor(model => model.SalesTax)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.FoodTax)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.FoodTax)
                @Html.ValidationMessageFor(model => model.FoodTax)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.SalesAmount)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.SalesAmount)
                @Html.ValidationMessageFor(model => model.SalesAmount)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.Notes)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Notes)
                @Html.ValidationMessageFor(model => model.Notes)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.OnBillDetail)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.OnBillDetail)
                @Html.ValidationMessageFor(model => model.OnBillDetail)
            </div>
            <p>
                <input type="submit" value="Create" id="createBtn" />
                <input type="button" value="Update" id="updateBtn" class="right" />
            </p>
        </fieldset>
    }
</div>
<div id="recieptRecords">
    @{Html.RenderAction("List", new { ProjectID = Model.Project.ID });}
</div>
<div id="notePopup">
</div>
@using (Html.BeginForm("Delete", "Reciept", FormMethod.Post, new { id = "hiddenDeleteForm" }))
{
    <input type="hidden" id="RecieptID" /> 
}
@section scripts {
    <script type="text/javascript">
        $(function () {

            initViewport();
            initWatermarks();
            initTable();
            initEditButton();
            initUpdateButton();
            initCancelButton();
            initDeleteButton();
            initStoreNameAutoComplete();
            initNotesPopup();

            //If we want to create a NEW recipet,
            //then remove any ID that might be floating 
            //around in the form ;)
            $("#createBtn").click(function () {
                $("#ID").val("");
            });

            //Collapse the totals areas
            $(".collapsible").collapsible();

            //Start with the RIF field having the default focus
            $("#RIF").focus();
            //Are we Creating a new reciept, or updataing?
            //we can tell by weather or not we already have a row int he table with the same RIF
            $("input#createBtn").show();
            $("input#updateBtn").hide();
            $("#RIF").keyup(function () {
                var found = false;

                $("table.tablesorter tr").each(function () {
                    var cell = $(this).find("td:first").text();

                    //If there is already a record with this RIF,
                    //then hide then create button, and show
                    //the update button
                    if ((cell != "") && ($.trim(cell) == $.trim($("#RIF").val()))) {
                        found = true;
                        return false;
                    }
                });

                if (found) {
                    $("input#createBtn").hide();
                    $("input#updateBtn").show();
                } else {
                    $("input#updateBtn").hide();
                    $("input#createBtn").show();
                }

            });
        });

        function initViewport() {
            var top = $("div#recieptRecords").offset().top;
            var height = $(window).height();
            $("div#recieptRecords").height(height - top);
        }

        function initWatermarks() {
            //Add watermarks to the input fields
            $.watermark.options.className = 'watermark';
            $.watermark.options.useNative = false;
            $("input#RIF").watermark("RIF    ");
            $("input#DateOfSale").watermark("Date Of Reciept     ");
            $("input#StoreName").watermark("Store Name     ");
            $("input#SalesTax").watermark("Sales Tax    ");
            $("input#FoodTax").watermark("Food Tax    ");
            $("input#SalesAmount").watermark("Sales Amount    ");
            $("input#Notes").watermark("Notes    ");
        }

        function initTable() {
            $("table").tablesorter({
                sortList: [[0, 0]] //sort by rif automatically
            });
        }

        function initEditButton() {
            //When we click on an edit icon, fill the form with the values from that row
            $(".editIcon").click(function () {
                //Some cross browser options to simply scroll to the top of the page
                //$(window).scrollTop();
                //document.body.scrollTop = 0;

                //Load the field values

                var rif = $(this).parent().parent().find("td:eq(0)").text();
                var date = $(this).parent().parent().find("td:eq(1)").text();
                var store = $(this).parent().parent().find("td:eq(2)").text();
                var salesTax = $(this).parent().parent().find("td:eq(4)").text();
                var foodTax = $(this).parent().parent().find("td:eq(5)").text();
                var salesAmt = $(this).parent().parent().find("td:eq(6)").text();
                var notes = $(this).parent().parent().find("td:eq(7) div").attr("title");
                var billDetail = $(this).parent().parent().find("td:eq(8) input").prop("checked");

                //clean it up
                var rif = $.trim(rif);
                var date = $.trim(date);
                var store = $.trim(store);
                var salesTax = $.trim(salesTax).substring(1).replace(",", "");
                var foodTax = $.trim(foodTax).substring(1).replace(",", "");
                var salesAmt = $.trim(salesAmt).substring(1).replace(",", "");
                var notes = $.trim(notes);

                $("#RIF").val($.trim(rif));
                $("#DateOfSale").val($.trim(date));
                $("#StoreName").val($.trim(store));
                $("#SalesTax").val($.trim(salesTax));
                $("#FoodTax").val($.trim(foodTax));
                $("#SalesAmount").val($.trim(salesAmt));
                $("#Notes").val($.trim(notes));
                $("#OnBillDetail").prop("checked", billDetail);

                $("#RIF").keyup();
                //$("select#County option:contains('" + $("tr#" + this.id + " .countyCol").text() + "')").attr('selected', 'selected');

                //$("#RIF").select();
            });
        }

        //Clicking the update button shoudl UPDATE the record, not create a new one
        function initUpdateButton() {
            $("#updateBtn").click(function () {
                var projid = $("input#Project_ID").val();
                $("#form").attr("action", "/Reciept/Edit/" + projid);

                $("#createBtn").click();
            });
        }
        function initCancelButton() {
            //When we click the cancel button, we want to clear all previously enter field data
            $("#Cancel").click(function () {
                $("#RIF").val("");
                $("#DateOfSale").val("");
                $("#StoreName").val("");
                $("#SalesTax").val("");
                $("#FoodTax").val("");
                $("#SalesAmount").val("");
                $("#Notes").val("");
            });
        }

        function initDeleteButton() {
            $(".deleteIcon").click(function () {
                //Find the id parent tr
                var id = $(this).parent().parent().attr("id");

                //put it in the form
                $("input#RecieptID").val(id);

                $("form#hiddenDeleteForm").attr("action", "/Reciept/Delete/" + id);

                //and submit it
                $("form#hiddenDeleteForm").submit();
            });
        }

        function initStoreNameAutoComplete() {

            //Load the store names from the database
            //<?php $reciepts = new RecieptsModal(); ?>
            //var storeNames = <?php echo json_encode($reciepts->getStoreNames()); ?>;        
            //Add auto complete to the store names field
            //$("#storeField").autocomplete({
            //    source: storeNames
            //});
        }

        function initNotesPopup() {
            //It shoudl initail be hidden
            $("div#notePopup").hide();

            $(".note").hover(
                function () {
                    $("div#notePopup").show();
                    $("div#notePopup").text($(this).attr("title"));
                    $("div#notePopup").offset({
                        left: $(this).offset().left - $("div#notePopup").width(),
                        top: $(this).offset().top
                    });
                },
                function () {
                    $("div#notePopup").hide();
                }
            );

            $("div#notePopup").hover(
            function () {
                $("div#notePopup").show();
            },
            function () {
                $("div#notePopup").hide();
            }
        );
        }
    </script>
}
